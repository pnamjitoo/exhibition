package com.exhibition.item;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.List;

import com.exhibition.notice.NoticeDAO;
import com.exhibition.notice.NoticeVO;

import util.DBManager;
import util.PagingVO;

public class ItemDAO {
	
	private ItemDAO() {
	}
	
	private static ItemDAO instance = new ItemDAO();
	public static ItemDAO getInstance() {
		return instance;
	}
	
	//아이템 페이징 메소드(전체 갯수 조회)
	public int countItem() {
		int total = 0;
		String sql ="SELECT COUNT(*) FROM notice";
		Connection conn = null;
		Statement stmt = null;
		ResultSet rs = null;
		try {
			conn = DBManager.getConnection();
			stmt = conn.createStatement();
			rs = stmt.executeQuery(sql);
			while(rs.next()) {
				total = rs.getInt("COUNT(*)");
			}
		}catch(SQLException e) {
			e.printStackTrace();
		}finally {
			DBManager.close(conn, stmt, rs);
		}
		return total;
		
	}
	
	public PagingVO pagingAccess(int nowPage, int cntPerPage) {
		int total = countNotice();
		PagingVO pVo = new PagingVO(total, nowPage, cntPerPage);
		return pVo;
	}
	
	//공지사항 페이징 목록 출력 메소드
	public List<NoticeVO> selectAllNotices(int nowPage, int cntPerPage){
		int total = countNotice();
		PagingVO pVo = new PagingVO(total, nowPage, cntPerPage);
		int startBdr = pVo.getStartBdr();
		int endBdr = pVo.getEndBdr();
		PreparedStatement pstmt = null;
		String sql ="SELECT * \r\n"
				+ "    FROM (\r\n"
				+ "        SELECT ROWNUM RN, A.* \r\n"
				+ "            FROM (\r\n"
				+ "                    SELECT * \r\n"
				+ "                    FROM notice\r\n"
				+ "                    ORDER BY not_no DESC \r\n"
				+ "                    ) A\r\n"
				+ "            )\r\n"
				+ "WHERE RN BETWEEN ? AND ?";
		List<NoticeVO> list = new ArrayList<NoticeVO>();
		Connection conn = null;
		Statement stmt = null;
		ResultSet rs = null;
		try {
			conn = DBManager.getConnection();
			stmt = conn.createStatement();
			pstmt = conn.prepareStatement(sql);
			pstmt.setInt(1,startBdr);
			pstmt.setInt(2,endBdr);
			rs = pstmt.executeQuery();
			while(rs.next()) {
				NoticeVO nVo = new NoticeVO();
				nVo.setNot_no(rs.getInt("not_no"));
				nVo.setTitle(rs.getString("title"));
				nVo.setId(rs.getString("id"));
				nVo.setNick(rs.getString("nick"));
				nVo.setNot_rdcnt(rs.getInt("not_rdcnt"));
				nVo.setRdate(rs.getTimestamp("rdate"));
				list.add(nVo);
			}
		}catch(SQLException e) {
			e.printStackTrace();
		}finally {
			DBManager.close(conn, stmt, rs);
		}
		return list;
	}
}

